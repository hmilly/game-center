{"version":3,"file":"component---src-pages-whack-mole-js-a01651447cdacda1e875.js","mappings":"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","sources":["webpack://whack-a-mole/./src/components/GameHeader.js","webpack://whack-a-mole/./src/images/games.jpg","webpack://whack-a-mole/./src/styles/Main.styled.js","webpack://whack-a-mole/./src/styles/Global.js","webpack://whack-a-mole/./src/components/Layout.js","webpack://whack-a-mole/./src/images/mole.png","webpack://whack-a-mole/./src/components/Mole.js","webpack://whack-a-mole/./src/pages/whackMole.js","webpack://whack-a-mole/./src/styles/Game.content.styled.js","webpack://whack-a-mole/./src/styles/Game.details.styled.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Header } from \"../styles/Game.details.styled\";\r\n\r\nconst GameHeader = ({ name, text, start, setStart, count }) => {\r\n  const [countdown, setCountdown] = useState(60);\r\n\r\n  useEffect(() => {\r\n    if (start && countdown > 0) {\r\n      setTimeout(() => setCountdown(countdown - 1), 1000);\r\n    } else if (!start || countdown === 0) {\r\n      setCountdown(60);\r\n      setStart(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Header btnCol={start ? \"red\" : \"lightgreen\"}>\r\n      <span>\r\n        <Link to=\"/\">üîô</Link>\r\n      </span>\r\n      <h1>{name}</h1>\r\n      <p>{text}</p>\r\n      <button onClick={() => setStart(!start)}>\r\n        {start ? \"Stop game\" : \"Start game\"}\r\n      </button>\r\n      <div>\r\n        <p>Time remaining:</p>\r\n        <p>Score:</p>\r\n        <p>{countdown}</p>\r\n        <p>{count}</p>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default GameHeader;\r\n","export default __webpack_public_path__ + \"static/games-090ed8d205ffe35a8180568b22ddd697.jpg\";","import styled from \"styled-components\";\r\nimport img from \"../images/games.jpg\"\r\n\r\nexport const Main = styled.main`\r\nheight: 100vh;\r\nwidth: 100vw;\r\n  background-image: url(${img}) ;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.ul`\r\n  width: 100%;\r\n  height: 100%;\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 10px;\r\n\r\n  li {\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 8px 0;\r\n  }\r\n  li:hover {\r\n    cursor: pointer;\r\n    a {\r\n      background-color: rgba(174, 174, 174, 0.3);\r\n    }\r\n  }\r\n  a {\r\n    display: block;\r\n    height: 100%;\r\n    width: 100%;\r\n    font-size: 18px;\r\n    margin: 0 auto;\r\n    padding: 10px;\r\n    color: yellow;\r\n  }\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n*{\r\n    font-family: \"Gill Sans\", sans-serif, serif;\r\n    color: white;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n}\r\n\r\np, h1, h3{\r\n    text-shadow: 3px 2px black;\r\n}\r\n\r\nbody{\r\n    margin: 0;\r\n    width: 100%;\r\n    height: auto;\r\n    background-color: black;\r\n    overflow: hidden;\r\n}\r\n`","import * as React from \"react\";\r\nimport { Main } from \"../styles/Main.styled\";\r\nimport { GlobalStyles } from \"../styles/Global\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <Main>\r\n      <GlobalStyles />\r\n      {children}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","export default __webpack_public_path__ + \"static/mole-14e71d1f94a05705838023148932ae5b.png\";","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport mole from \"../images/mole.png\";\r\n\r\nconst Mole = ({ count, setCount, start }) => {\r\n  const [t, setT] = useState(0);\r\n\r\n  const timeout = () => Math.round(Math.random() * (2000 - 200) + 500);\r\n\r\n  useEffect(() => {\r\n    if (start && t === 0) {\r\n      const time = timeout();\r\n      setTimeout(() => {\r\n        setT(time);\r\n      }, [time + 2000]);\r\n    } else if (start) {\r\n      const time = timeout();\r\n      setTimeout(() => {\r\n        setT(0);\r\n      }, time);\r\n    } else {\r\n      return;\r\n    }\r\n  }, [t, start]);\r\n\r\n  const setScore = () => {\r\n    setT(0);\r\n    if (start) setCount((count += 5));\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {start && t > 0 ? (\r\n        <img src={mole} onClick={() => setScore()} alt=\"mole\" />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <span>üï≥Ô∏è</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Mole;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Ul } from \"../styles/Game.content.styled\";\r\nimport { Container } from \"../styles/Game.details.styled\";\r\nimport Layout from \"../components/Layout\";\r\nimport Mole from \"../components/Mole\";\r\nimport GameHeader from \"../components/GameHeader\";\r\n\r\nconst WhackMole = () => {\r\n  const [start, setStart] = useState(false);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (start) setCount(0);\r\n  }, [start]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <GameHeader\r\n          name=\"Whack-a-Mole\"\r\n          text=\"Get him!\"\r\n          start={start}\r\n          setStart={setStart}\r\n          count={count}\r\n        />\r\n        <Ul>\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n          <Mole count={count} setCount={setCount} start={start} />\r\n        </Ul>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default WhackMole;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Ul = styled.ul`\r\n  display: grid;\r\n  grid-template-rows: repeat(3, 1fr);\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-auto-flow: row;\r\n  list-style-type: none;\r\n  justify-self: center;\r\n  align-self: center;\r\n  width: 390px;\r\n  height: 390px;\r\n  grid-template-areas:\r\n    \". . .\"\r\n    \". . .\"\r\n    \". . .\";\r\n  background-color: green;\r\n  padding: 0;\r\n  li {\r\n    position: relative;\r\n    border: solid black 1px;\r\n    img {\r\n      position: absolute;\r\n      width: 80px;\r\n      height: auto;\r\n      top: 10px;\r\n      left: 22px;\r\n    }\r\n    img:hover {\r\n      cursor: not-allowed;\r\n    }\r\n    span {\r\n      font-size: 90px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(auto-fill, minmax(100px, 330px));\r\n  grid-template-columns: 1fr;\r\n  align-items: center;\r\n  justify-items: center;\r\n\r\n  a {\r\n    padding: 15px;\r\n    width: 300px;\r\n    height: auto;\r\n    background-color: rgba(1, 50, 67, 0.6);\r\n    border: solid 1px rgba(1, 50, 67);\r\n    border-radius: 4px;\r\n    h2 {\r\n      text-align: center;\r\n      color: peachpuff;\r\n    }\r\n    img {\r\n      width: 100%;\r\n      height: auto;\r\n    }\r\n    p {\r\n      text-shadow: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PlayArea = styled.section`\r\n  width: 600px;\r\n  height: 400px;\r\n  font-family: \"Press Start 2P\", \"Arial\", sans-serif;\r\n\r\n  div {\r\n    display: grid;\r\n    grid-template-rows: 0.2fr 1fr 0.2fr;\r\n    grid-template-columns: 0.2fr 1fr 0.2fr;\r\n    grid-auto-flow: row;\r\n    list-style-type: none;\r\n    width: 600px;\r\n    height: 400px;\r\n\r\n    canvas {\r\n      margin: 0;\r\n      width: 600px;\r\n      height: 400px;\r\n      background-color: rgba(0, 0, 205, 0.8);\r\n      border-radius: 5px;\r\n      border: solid white 2px;\r\n    }\r\n\r\n    h2 {\r\n      position: absolute;\r\n      width: 400px;\r\n      height: 30px;\r\n      color: white;\r\n      text-align: center;\r\n      margin: 100px;\r\n      font-weight: 700;\r\n      font-size: 40px;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  display: grid;\r\n  height: 100vh;\r\n  grid-template-rows: 1fr 3fr;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n\r\n  grid-template-rows: repeat(auto-fit, minmax(25px, 75px));\r\n  grid-template-columns: 1fr;\r\n  gap: 5px;\r\n  align-content: space-around;\r\n  align-items: center;\r\n  justify-items: center;\r\n  span{\r\n    position:absolute;\r\n    height: 59px;\r\n    width: 59px;\r\n    left: 0;\r\n    top: 0;\r\n    a{\r\n      padding: 0;\r\n      font-size: 45px;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n  h1 {\r\n    color: peachpuff;\r\n  }\r\n  p {\r\n    font-size: 20px;\r\n  }\r\n  button {\r\n    padding: 2px 20px;\r\n    border: solid 3px lightblue;\r\n    background-color: black;\r\n    color: ${({ btnCol }) => btnCol};\r\n    font-size: 18px;\r\n    &:hover {\r\n      transition: padding 0.1s;\r\n      padding: 4px 24px;\r\n      cursor: pointer;\r\n      font-size: 20px;\r\n    }\r\n    &:active {\r\n      border: solid 3px black;\r\n      color: black;\r\n      padding: 0 18px;\r\n      background-color: lightblue;\r\n    }\r\n  }\r\n\r\n  div {\r\n    display: grid;\r\n    width: .75fr;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n    align-items: end;\r\n    justify-items: center;\r\n    p :nth-child(3),\r\n    p :nth-child(4) {\r\n      font-size: 24px;\r\n      font-weight: 700;\r\n      color: lightcoral;\r\n      text-shadow: 3px 2px blue;\r\n    }\r\n  }\r\n`;\r\n"],"names":["name","text","start","setStart","count","useState","countdown","setCountdown","useEffect","setTimeout","btnCol","to","onClick","Main","styled","img","GlobalStyles","createGlobalStyle","children","setCount","t","setT","timeout","Math","round","random","time","src","mole","alt","Layout","GameHeader","Ul","Grid","PlayArea","Container","Header"],"sourceRoot":""}